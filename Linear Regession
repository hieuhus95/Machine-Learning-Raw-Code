import numpy as np

import pandas as pd
import sklearn
from sklearn.model_selection import train_test_split

df = pd.read_csv("Advertising.csv")
df.head()

df.columns = ["ind", "tv", "radio", "newspaper", "sales"]

X = df[["tv", "radio", "newspaper"]]
X = np.array(X)
Y = df["sales"]
Y = np.array(Y)
print(X.shape, Y.shape)

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.33)
print(X_train.shape, X_test.shape, Y_train.shape, Y_test.shape)

def predict(features, weights):
    """create h(x)"""
    return np.dot(features, weights)
  
def cost_function(features, weights, labels):
    h = predict(features, weights)
    J = 1/2 * np.sum((h - labels)**2)
    return J

def gradient(features, weights, labels):
    h = predict(features, weights)
    grad = np.dot(features.T, (h - labels))
    return grad

def update_weights(features, weights, labels, lr):
    grad = gradient(features, weights, labels)
    weights += lr*grad
    return weights  
    
def train(features, weights, labels, lr, iters):
    for i in range(iters):
        weights = update_weights(features, weights, labels,lr)
        cost = cost_function(features, weights, labels)
        if i % 500 == 0:
            print("iter ",i)
            print("weights: ", weights)
            print("cost: ", cost)
iters = 2001
weights = np.zeros((3,))
lr = 0.3


train(X_train, weights, Y_train, lr, iters)
